class Solution {
  public:
    vector<vector<int>> kSmallestPair(vector<int> &nums1, vector<int> &nums2, int k) {
        // code here
        vector<vector<int>> result;
        if(nums1.empty() || nums2.empty() || k <= 0)return result;
        auto cmp = [](const vector<int>& a, const vector<int>& b){
            return a[0] + a[1] > b[0] + b[1];
        };
        priority_queue<vector<int>, vector<vector<int>>, decltype(cmp) > pq(cmp);
        
        for(int i=0; i<nums1.size() && i<k; ++i){
            pq.push({nums1[i], nums2[0], 0});
        }
        
        while(k-- > 0 && !pq.empty()){
            auto top = pq.top(); pq.pop();
            result.push_back({top[0], top[1]});
            int idx = top[2] + 1;
            if(idx < nums2.size()){
                pq.push({top[0], nums2[idx], idx});
            }
        }
        return result;
    }
};
