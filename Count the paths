class Solution {
  public:
   vector<int>g[15];
        int ans=0;
             void dfs(int s, int d){
                 if(s==d){
                     ans++;
                     return;
                 }
                 for(auto e:g[s]){
                     dfs(e,d);
                 }
             }
    int possible_paths(vector<vector<int>> &edges, int n, int s, int d) {
        // mrmdsohel
        ans=0;
        for(int i=0; i<edges.size(); i++){
            g[edges[i][0]].push_back(edges[i][1]);
            
        }
        dfs(s,d);
        return ans;
       
    }
};
